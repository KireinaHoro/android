The feature sysroot originally for cross compiling has two parts. The
first is to prepend lib path, done in configure phase, which we call
configure-time sysroot. The second is to prepend rpath in libraries
and path inside ld scripts when ld is called, which we call runtime
sysroot.

In the case of cross compilation, both are needed. While in the case
of native sysroot, which runs userland in a directory prefix natively,
only configure-time sysroot is needed.

Here we add an additional option of --enable-runtime-sysroot to fine
control such features.

2013-08-25  Benda Xu  <heroxbd@gentoo.org>

	* configure.in: add enable-runtime-sysroot to control the 
	macro ENABLE_RUNTIME_SYSROOT
	* emultempl/elf32.em: only prepend rpath with sysroot when
	ENABLE_RUNTIME_SYSROOT is defined
	* ldfile.c: only prepend lib path with sysroot when
	ENABLE_RUNTIME_SYSROOT is defined
	* ld.texinfo: document this new behavior for ld script

Index: binutils-2.24/ld/configure.in
===================================================================
--- binutils-2.24.orig/ld/configure.in
+++ binutils-2.24/ld/configure.in
@@ -87,6 +87,18 @@ AC_SUBST(use_sysroot)
 AC_SUBST(TARGET_SYSTEM_ROOT)
 AC_SUBST(TARGET_SYSTEM_ROOT_DEFINE)
 
+AC_ARG_ENABLE(runtime-sysroot,
+[AS_HELP_STRING([--enable-runtime-sysroot],
+		 [prepend sysroot to libpath in ld script and rpath,
+                 only used in addition to --with-sysroot (default is yes)])],
+[case "${enableval}" in
+  no) ;;
+  *) AC_DEFINE(ENABLE_RUNTIME_SYSROOT, [], \
+               [prepend sysroot to libpath in ld script and rpath]) ;;
+esac],
+AC_DEFINE(ENABLE_RUNTIME_SYSROOT, [], \
+          [prepend sysroot to libpath in ld script and rpath]))
+
 dnl Use --enable-gold to decide if this linker should be the default.
 dnl "install_as_default" is set to false if gold is the default linker.
 dnl "installed_linker" is the installed BFD linker name.
Index: binutils-2.24/ld/emultempl/elf32.em
===================================================================
--- binutils-2.24.orig/ld/emultempl/elf32.em
+++ binutils-2.24/ld/emultempl/elf32.em
@@ -529,7 +529,10 @@ static char *
 gld${EMULATION_NAME}_add_sysroot (const char *path)
 {
   int len, colons, i;
-  char *ret, *p;
+  char *ret;
+
+#ifdef ENABLE_RUNTIME_SYSROOT
+  char *p;
 
   len = strlen (path);
   colons = 0;
@@ -557,6 +560,11 @@ gld${EMULATION_NAME}_add_sysroot (const
       *p++ = path[i++];
 
   *p = 0;
+#else
+  ret = xmalloc (strlen (path) + 1);
+  strcpy (ret, path);
+#endif
+
   return ret;
 }
 
Index: binutils-2.24/ld/ldfile.c
===================================================================
--- binutils-2.24.orig/ld/ldfile.c
+++ binutils-2.24/ld/ldfile.c
@@ -463,7 +463,11 @@ try_open (const char *name, bfd_boolean
   result = fopen (name, "r");
 
   if (result != NULL)
+#ifdef ENABLE_RUNTIME_SYSROOT
     *sysrooted = is_sysrooted_pathname (name);
+#else
+    *sysrooted = 0;
+#endif
 
   if (verbose)
     {
Index: binutils-2.24/ld/ld.texinfo
===================================================================
--- binutils-2.24.orig/ld/ld.texinfo
+++ binutils-2.24/ld/ld.texinfo
@@ -3092,13 +3092,14 @@ then you can put @samp{INPUT (subr.o)} i
 In fact, if you like, you can list all of your input files in the linker
 script, and then invoke the linker with nothing but a @samp{-T} option.
 
-In case a @dfn{sysroot prefix} is configured, and the filename starts
-with the @samp{/} character, and the script being processed was
-located inside the @dfn{sysroot prefix}, the filename will be looked
-for in the @dfn{sysroot prefix}.  Otherwise, the linker will try to
-open the file in the current directory.  If it is not found, the
-linker will search through the archive library search path.  See the
-description of @samp{-L} in @ref{Options,,Command Line Options}.
+In case a @dfn{sysroot prefix} is configured without explict
+--disable-runtime-sysroot, and the filename starts with the @samp{/}
+character, and the script being processed was located inside the
+@dfn{sysroot prefix}, the filename will be looked for in the
+@dfn{sysroot prefix}.  Otherwise, the linker will try to open the file
+in the current directory.  If it is not found, the linker will search
+through the archive library search path.  See the description of
+@samp{-L} in @ref{Options,,Command Line Options}.
 
 If you use @samp{INPUT (-l@var{file})}, @command{ld} will transform the
 name to @code{lib@var{file}.a}, as with the command line argument
Index: binutils-2.24/ld/configure
===================================================================
--- binutils-2.24.orig/ld/configure
+++ binutils-2.24/ld/configure
@@ -774,6 +774,7 @@ with_lib_path
 enable_targets
 enable_64_bit_bfd
 with_sysroot
+enable_runtime_sysroot
 enable_gold
 enable_got
 enable_werror
@@ -1429,6 +1430,10 @@ Optional Features:
 			  (and sometimes confusing) to the casual installer
   --enable-targets        alternative target configurations
   --enable-64-bit-bfd     64-bit support (on hosts with narrower word sizes)
+  --enable-runtime-sysroot
+                          prepend sysroot to libpath in ld script and rpath,
+                          only used in addition to --with-sysroot (default is
+                          yes)
   --enable-gold[=ARG]     build gold [ARG={default,yes,no}]
   --enable-got=<type>     GOT handling scheme (target, single, negative,
                           multigot)
@@ -4318,6 +4323,21 @@ fi
 
 
 
+# Check whether --enable-runtime-sysroot was given.
+if test "${enable_runtime_sysroot+set}" = set; then :
+  enableval=$enable_runtime_sysroot; case "${enableval}" in
+  no) ;;
+  *)
+$as_echo "#define ENABLE_RUNTIME_SYSROOT /**/" >>confdefs.h
+ ;;
+esac
+else
+
+$as_echo "#define ENABLE_RUNTIME_SYSROOT /**/" >>confdefs.h
+
+fi
+
+
 # Check whether --enable-gold was given.
 if test "${enable_gold+set}" = set; then :
   enableval=$enable_gold; case "${enableval}" in
@@ -12192,7 +12212,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<_LT_EOF
-#line 12195 "configure"
+#line 12215 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -12298,7 +12318,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<_LT_EOF
-#line 12301 "configure"
+#line 12321 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
Index: binutils-2.24/ld/config.in
===================================================================
--- binutils-2.24.orig/ld/config.in
+++ binutils-2.24/ld/config.in
@@ -2,7 +2,7 @@
 
 /* Check that config.h is #included before system headers
    (this works only for glibc, but that should be enough).  */
-#if defined(__GLIBC__) && !defined(__FreeBSD_kernel__) && !defined(__CONFIG_H__)
+#if defined(__GLIBC__) && !defined(__CONFIG_H__)
 #  error config.h must be #included before system headers
 #endif
 #define __CONFIG_H__ 1
@@ -11,6 +11,9 @@
    language is requested. */
 #undef ENABLE_NLS
 
+/* prepend sysroot to libpath in ld script and rpath */
+#undef ENABLE_RUNTIME_SYSROOT
+
 /* Additional extension a shared object might have. */
 #undef EXTRA_SHLIB_EXTENSION
 
